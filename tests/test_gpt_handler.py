#!/usr/bin/env python3
"""
–¢–µ—Å—Ç GPT –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from handlers_veretevo.gpt_handlers import get_department_from_chat, handle_message_in_group
from config_veretevo.constants import GENERAL_DIRECTOR_ID
from telegram import Update, Message, User, Chat
from telegram.ext import ContextTypes
import asyncio

def test_department_detection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç–¥–µ–ª–∞...")
    
    test_cases = [
        (-1002295933154, "security", "–û—Ö—Ä–∞–Ω–∞"),
        (-1002766433811, "assistants", "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã"),
        (-1002874667453, "carpenters", "–ü–ª–æ—Ç–Ω–∏–∫–∏"),
        (-1002844492561, "finance", "–§–∏–Ω–∞–Ω—Å—ã"),
        (-1002634456712, "construction", "–°—Ç—Ä–æ–π–∫–∞"),
        (-1002588088668, "management", "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏"),
        (-4883128031, "info", "–ò–Ω—Ñ–æ"),
    ]
    
    for chat_id, expected, name in test_cases:
        result = get_department_from_chat(chat_id)
        status = "‚úÖ" if result == expected else "‚ùå"
        print(f"{status} {name} (ID: {chat_id}) -> '{result}' (–æ–∂–∏–¥–∞–ª–æ—Å—å: '{expected}')")
    
    print()

def test_handler_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞...")
    
    print(f"üë§ –î–∏—Ä–µ–∫—Ç–æ—Ä ID: {GENERAL_DIRECTOR_ID}")
    print("üìã –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —á–∞—Ç–∞ (group/supergroup)")
    print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –Ω–µ –±–æ—Ç")
    print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ù–ï –¥–∏—Ä–µ–∫—Ç–æ—Ä")
    print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è (>= 3 —Å–∏–º–≤–æ–ª–æ–≤)")
    print("5. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É –≤ –ª–∏—á–Ω—ã–π —á–∞—Ç")
    
    print("\nüéØ –û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ:")
    print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π -> –ø–æ–¥—Å–∫–∞–∑–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É")
    print("‚ùå –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ -> –ø—Ä–æ–ø—É—Å–∫")
    print("‚ùå –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤ -> –ø—Ä–æ–ø—É—Å–∫")
    print("‚ùå –ö–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (< 3 —Å–∏–º–≤–æ–ª–æ–≤) -> –ø—Ä–æ–ø—É—Å–∫")
    print("‚ùå –°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –≤ –≥—Ä—É–ø–ø–∞—Ö -> –ø—Ä–æ–ø—É—Å–∫")
    
    print()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ === –¢–ï–°–¢ GPT –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê ===\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª–∞
    test_department_detection()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    test_handler_logic()
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print("1. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∫–æ–≥–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª—é–±—É—é –∏–∑ –≥—Ä—É–ø–ø (–æ—Ö—Ä–∞–Ω–∞, —Ñ–∏–Ω–∞–Ω—Å—ã, —Å—Ç—Ä–æ–π–∫–∞, —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏, –∏–Ω—Ñ–æ)")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ '[GPT DEBUG]' —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("3. –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞")
    print("4. –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è - –ø—Ä–æ–±–ª–µ–º–∞ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –ø–æ–¥—Å–∫–∞–∑–∫–∏")

if __name__ == "__main__":
    main() 