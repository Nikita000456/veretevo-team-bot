#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç API Yandex SpeechKit –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º
"""

import requests
import tempfile
import os
from pydub import AudioSegment
from pydub.generators import Sine
from config_veretevo.env import YANDEX_SPEECHKIT_API_KEY, YANDEX_FOLDER_ID

def test_api_directly():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç API –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∞–π–±–µ—Ä–∞"""
    print("üîç –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç API Yandex SpeechKit...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∞—É–¥–∏–æ—Ñ–∞–π–ª
        print("üéµ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞—É–¥–∏–æ—Ñ–∞–π–ª...")
        duration_ms = 2000  # 2 —Å–µ–∫—É–Ω–¥—ã
        tone = Sine(440).to_audio_segment(duration=duration_ms)  # –õ—è –ø–µ—Ä–≤–æ–π –æ–∫—Ç–∞–≤—ã
        
        with tempfile.NamedTemporaryFile(delete=False, suffix='.ogg') as temp_file:
            tone.export(temp_file.name, format='ogg', codec='libopus', 
                       parameters=["-ac", "1", "-ar", "48000", "-b:a", "64k"])
            audio_path = temp_file.name
        
        print(f"‚úÖ –ê—É–¥–∏–æ—Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {audio_path}")
        
        # –ß–∏—Ç–∞–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª
        with open(audio_path, 'rb') as audio_file:
            audio_data = audio_file.read()
        
        print(f"üìä –†–∞–∑–º–µ—Ä –∞—É–¥–∏–æ –¥–∞–Ω–Ω—ã—Ö: {len(audio_data)} –±–∞–π—Ç")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
        url = "https://stt.api.cloud.yandex.net/speech/v1/stt:recognize"
        params = {
            'folderId': YANDEX_FOLDER_ID,
            'lang': 'ru-RU',
            'model': 'general:rc',
            'sampleRateHertz': '48000',
            'profanityFilter': 'false',
            'partialResults': 'false'
        }
        headers = {
            'Authorization': f'Api-Key {YANDEX_SPEECHKIT_API_KEY}',
            'Content-Type': 'application/octet-stream'
        }
        
        print(f"üåê URL: {url}")
        print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
        print(f"üîë API Key: {YANDEX_SPEECHKIT_API_KEY[:10]}...")
        print(f"üìÅ Folder ID: {YANDEX_FOLDER_ID}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API...")
        response = requests.post(url, params=params, headers=headers, data=audio_data, timeout=30)
        
        print(f"üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: —Å—Ç–∞—Ç—É—Å {response.status_code}")
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        print(f"üìù –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            try:
                result = response.json()
                print(f"‚úÖ JSON –æ—Ç–≤–µ—Ç: {result}")
                if 'result' in result:
                    transcript = result['result']
                    if transcript:
                        print(f"üé§ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è: '{transcript}'")
                    else:
                        print("‚ö†Ô∏è –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –ø—É—Å—Ç–∞—è")
                else:
                    print("‚ùå –ù–µ—Ç –ø–æ–ª—è 'result' –≤ –æ—Ç–≤–µ—Ç–µ")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if 'audio_path' in locals() and os.path.exists(audio_path):
            os.unlink(audio_path)
            print("üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")

def test_api_balance():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–ª–∞–Ω—Å –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API"""
    print("\nüí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ API...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        url = "https://stt.api.cloud.yandex.net/speech/v1/stt:recognize"
        params = {
            'folderId': YANDEX_FOLDER_ID,
            'lang': 'ru-RU',
            'model': 'general:rc',
            'sampleRateHertz': '48000'
        }
        headers = {
            'Authorization': f'Api-Key {YANDEX_SPEECHKIT_API_KEY}',
            'Content-Type': 'application/octet-stream'
        }
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å (1 –±–∞–π—Ç)
        response = requests.post(url, params=params, headers=headers, data=b'\x00', timeout=10)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞: {response.status_code}")
        print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 400:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –∑–∞–ø—Ä–æ—Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π (–æ–∂–∏–¥–∞–µ–º–æ)")
        elif response.status_code == 401:
            print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á")
        elif response.status_code == 403:
            print("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")
        elif response.status_code == 429:
            print("‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤")
        else:
            print(f"‚ÑπÔ∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–ª–∞–Ω—Å–∞: {e}")

def main():
    print("üöÄ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API Yandex SpeechKit\n")
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ API
    test_api_directly()
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
    test_api_balance()
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –≤ Yandex Cloud Console")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –∫–ª—é—á –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ SpeechKit")
    print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π API –∫–ª—é—á")

if __name__ == "__main__":
    main()
