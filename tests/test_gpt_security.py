#!/usr/bin/env python3
"""
–¢–µ—Å—Ç GPT —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –¥–ª—è —á–∞—Ç–∞ –æ—Ö—Ä–∞–Ω—ã
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from handlers_veretevo.gpt_handlers import get_department_from_chat
from services_veretevo.gpt_service import gpt_service

def test_department_detection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª–∞ –ø–æ ID —á–∞—Ç–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç–¥–µ–ª–∞ –ø–æ ID —á–∞—Ç–∞...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ ID —á–∞—Ç–æ–≤
    test_cases = [
        (-1002766433811, "assistants", "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã"),
        (-1002874667453, "carpenters", "–ü–ª–æ—Ç–Ω–∏–∫–∏"),
        (-1002295933154, "security", "–û—Ö—Ä–∞–Ω–∞"),
        (-1002844492561, "finance", "–§–∏–Ω–∞–Ω—Å—ã"),
        (-1002634456712, "construction", "–°—Ç—Ä–æ–π–∫–∞"),
        (-1002588088668, "management", "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏"),
        (-4883128031, "info", "–ò–Ω—Ñ–æ"),
        (123456789, "", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç")
    ]
    
    for chat_id, expected_department, description in test_cases:
        result = get_department_from_chat(chat_id)
        status = "‚úÖ" if result == expected_department else "‚ùå"
        print(f"{status} {description} (ID: {chat_id}) -> '{result}' (–æ–∂–∏–¥–∞–ª–æ—Å—å: '{expected_department}')")
    
    print()

def test_gpt_service():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç GPT —Å–µ—Ä–≤–∏—Å"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GPT —Å–µ—Ä–≤–∏—Å–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = gpt_service.get_cache_stats()
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:")
    print(f"   - –í—Å–µ–≥–æ –æ—Ç–≤–µ—Ç–æ–≤: {stats['total_answers']}")
    print(f"   - –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {stats['file_size']} –±–∞–π—Ç")
    print(f"   - –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: {stats['last_save']}")
    print()

def test_similar_questions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ—Ö–æ–∂–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
    test_question = "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞?"
    test_answer = "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ–±—Ö–æ–¥ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –≤—Ö–æ–¥—ã –∏ –≤—ã—Ö–æ–¥—ã, —É–±–µ–¥–∏—Ç—å—Å—è –≤ –∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
    success = gpt_service.save_answer_template(test_question, test_answer, "security")
    print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞: {'‚úÖ' if success else '‚ùå'}")
    
    # –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–π –≤–æ–ø—Ä–æ—Å
    similar = gpt_service.find_similar_question("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
    if similar:
        print(f"üîç –ù–∞–π–¥–µ–Ω –ø–æ—Ö–æ–∂–∏–π –≤–æ–ø—Ä–æ—Å: '{similar['question']}'")
        print(f"   –û—Ç–≤–µ—Ç: {similar['answer'][:50]}...")
    else:
        print("üîç –ü–æ—Ö–æ–∂–∏–π –≤–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ === –¢–ï–°–¢ GPT –§–£–ù–ö–¶–ò–û–ù–ê–õ–ê –î–õ–Ø –ß–ê–¢–ê –û–•–†–ê–ù–´ ===\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª–∞
    test_department_detection()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º GPT —Å–µ—Ä–≤–∏—Å
    test_gpt_service()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    test_similar_questions()
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –æ—Ö—Ä–∞–Ω—ã (-1002295933154)")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ 'üí° GPT-–æ—Ç–≤–µ—Ç'")
    print("3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç–≤–µ—Ç–∞")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π")

if __name__ == "__main__":
    main() 