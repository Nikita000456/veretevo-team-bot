#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ voice_transcriber –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –±–æ—Ç–∞
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_voice_transcriber_initialization():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é voice_transcriber"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ voice_transcriber...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å tasks
        from handlers_veretevo.tasks import voice_transcriber
        
        if voice_transcriber:
            print("‚úÖ voice_transcriber –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"   –¢–∏–ø: {type(voice_transcriber)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã
            if hasattr(voice_transcriber, 'api_key'):
                print(f"   API Key: {'–£–°–¢–ê–ù–û–í–õ–ï–ù' if voice_transcriber.api_key else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
            else:
                print("   ‚ùå API Key –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
            if hasattr(voice_transcriber, 'folder_id'):
                print(f"   Folder ID: {'–£–°–¢–ê–ù–û–í–õ–ï–ù' if voice_transcriber.folder_id else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
            else:
                print("   ‚ùå Folder ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
            return True
        else:
            print("‚ùå voice_transcriber —Ä–∞–≤–µ–Ω None")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False

def test_import_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç YandexSpeechKitTranscriber
        from utils_veretevo.yandex_speechkit import YandexSpeechKitTranscriber
        print("‚úÖ YandexSpeechKitTranscriber –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç config_veretevo
        from config_veretevo import env
        print("‚úÖ config_veretevo.env –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        api_key = env.YANDEX_SPEECHKIT_API_KEY
        folder_id = env.YANDEX_FOLDER_ID
        
        print(f"   API Key –∏–∑ env: {'–£–°–¢–ê–ù–û–í–õ–ï–ù' if api_key else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
        print(f"   Folder ID –∏–∑ env: {'–£–°–¢–ê–ù–û–í–õ–ï–ù' if folder_id else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ: {e}")
        return False

def test_voice_transcriber_methods():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥—ã voice_transcriber"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ voice_transcriber...")
    
    try:
        from handlers_veretevo.tasks import voice_transcriber
        
        if not voice_transcriber:
            print("‚ùå voice_transcriber –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–æ–≤
        methods = ['process_audio_file', 'transcribe_audio', 'convert_audio_to_ogg', 'test_connection']
        
        for method in methods:
            if hasattr(voice_transcriber, method):
                print(f"‚úÖ –ú–µ—Ç–æ–¥ {method} –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"‚ùå –ú–µ—Ç–æ–¥ {method} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º test_connection
        if hasattr(voice_transcriber, 'test_connection'):
            print("üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...")
            result = voice_transcriber.test_connection()
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£–°–ü–ï–•' if result else '‚ùå –ü–†–û–í–ê–õ'}")
            
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–µ—Ç–æ–¥–æ–≤: {e}")
        return False

def main():
    print("üöÄ –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ voice_transcriber\n")
    
    # –¢–µ—Å—Ç 1: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
    import_ok = test_import_structure()
    
    # –¢–µ—Å—Ç 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è voice_transcriber
    init_ok = test_voice_transcriber_initialization()
    
    # –¢–µ—Å—Ç 3: –ú–µ—Ç–æ–¥—ã voice_transcriber
    methods_ok = test_voice_transcriber_methods()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"   –ò–º–ø–æ—Ä—Ç—ã: {'‚úÖ –û–ö' if import_ok else '‚ùå –û–®–ò–ë–ö–ê'}")
    print(f"   –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {'‚úÖ –û–ö' if init_ok else '‚ùå –û–®–ò–ë–ö–ê'}")
    print(f"   –ú–µ—Ç–æ–¥—ã: {'‚úÖ –û–ö' if methods_ok else '‚ùå –û–®–ò–ë–ö–ê'}")
    
    if import_ok and init_ok and methods_ok:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° voice_transcriber –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –±–æ—Ç–µ")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å voice_transcriber")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")

if __name__ == "__main__":
    main()
