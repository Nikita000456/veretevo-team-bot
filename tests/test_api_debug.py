#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ API Yandex SpeechKit
"""

import os
import tempfile
import requests
import json
from pydub.generators import Sine

def test_api_credentials():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ API"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö API...")
    
    try:
        from config_veretevo.env import YANDEX_SPEECHKIT_API_KEY, YANDEX_FOLDER_ID
        
        print(f"API Key: {'–£–°–¢–ê–ù–û–í–õ–ï–ù' if YANDEX_SPEECHKIT_API_KEY else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
        if YANDEX_SPEECHKIT_API_KEY:
            print(f"   –î–ª–∏–Ω–∞: {len(YANDEX_SPEECHKIT_API_KEY)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"   –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {YANDEX_SPEECHKIT_API_KEY[:10]}...")
        
        print(f"Folder ID: {'–£–°–¢–ê–ù–û–í–õ–ï–ù' if YANDEX_FOLDER_ID else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
        if YANDEX_FOLDER_ID:
            print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ: {YANDEX_FOLDER_ID}")
            
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def test_api_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API...")
    
    try:
        from config_veretevo.env import YANDEX_SPEECHKIT_API_KEY, YANDEX_FOLDER_ID
        
        if not YANDEX_SPEECHKIT_API_KEY or not YANDEX_FOLDER_ID:
            print("‚ùå –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            return False
            
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        tone = Sine(440).to_audio_segment(duration=2000)
        with tempfile.NamedTemporaryFile(delete=False, suffix='.ogg') as temp_file:
            tone.export(temp_file.name, format='ogg', codec='libopus', 
                       parameters=["-ac", "1", "-ar", "48000", "-b:a", "64k"])
            
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {temp_file.name}")
            print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(temp_file.name)} –±–∞–π—Ç")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
            url = f"https://stt.api.cloud.yandex.net/speech/v1/stt:recognize?folderId={YANDEX_FOLDER_ID}&lang=ru-RU&model=general:rc&sampleRateHertz=48000&profanityFilter=false&partialResults=false"
            headers = {
                'Authorization': f'Api-Key {YANDEX_SPEECHKIT_API_KEY}',
                'Content-Type': 'application/octet-stream'
            }
            
            print(f"üîó URL: {url}")
            print(f"üîë API Key: {YANDEX_SPEECHKIT_API_KEY[:10]}...")
            print(f"üìÅ Folder ID: {YANDEX_FOLDER_ID}")
            print(f"üìã Headers: {headers}")
            
            with open(temp_file.name, 'rb') as audio_file:
                audio_data = audio_file.read()
            
            print(f"üìä –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {len(audio_data)} –±–∞–π—Ç")
            print(f"üìä –ü–µ—Ä–≤—ã–µ 50 –±–∞–π—Ç: {audio_data[:50]}")
            
            print("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API...")
            response = requests.post(url, headers=headers, data=audio_data, timeout=30)
            
            print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
            
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç: {result}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
                print(f"üìÑ –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: {e}")
        import traceback
        print(f"üìã Traceback: {traceback.format_exc()}")
        return False

def test_different_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã API"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ API...")
    
    try:
        from config_veretevo.env import YANDEX_SPEECHKIT_API_KEY, YANDEX_FOLDER_ID
        
        if not YANDEX_SPEECHKIT_API_KEY or not YANDEX_FOLDER_ID:
            print("‚ùå –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            return False
            
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        tone = Sine(440).to_audio_segment(duration=1000)
        with tempfile.NamedTemporaryFile(delete=False, suffix='.ogg') as temp_file:
            tone.export(temp_file.name, format='ogg', codec='libopus', 
                       parameters=["-ac", "1", "-ar", "48000", "-b:a", "64k"])
            
            with open(temp_file.name, 'rb') as audio_file:
                audio_data = audio_file.read()
            
            headers = {
                'Authorization': f'Api-Key {YANDEX_SPEECHKIT_API_KEY}',
                'Content-Type': 'application/octet-stream'
            }
            
            # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
            print("üé§ –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç...")
            url1 = f"https://stt.api.cloud.yandex.net/speech/v1/stt:recognize?folderId={YANDEX_FOLDER_ID}&lang=ru-RU"
            response1 = requests.post(url1, headers=headers, data=audio_data, timeout=10)
            print(f"   –°—Ç–∞—Ç—É—Å: {response1.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response1.text[:200]}...")
            
            # –¢–µ—Å—Ç 2: –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            print("üé§ –¢–µ—Å—Ç 2: –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏...")
            url2 = f"https://stt.api.cloud.yandex.net/speech/v1/stt:recognize?folderId={YANDEX_FOLDER_ID}&lang=ru-RU&model=general:rc&sampleRateHertz=48000"
            response2 = requests.post(url2, headers=headers, data=audio_data, timeout=10)
            print(f"   –°—Ç–∞—Ç—É—Å: {response2.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response2.text[:200]}...")
            
            # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            print("üé§ –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
            url3 = "https://stt.api.cloud.yandex.net/speech/v1/stt:recognize"
            response3 = requests.post(url3, headers=headers, data=audio_data, timeout=10)
            print(f"   –°—Ç–∞—Ç—É—Å: {response3.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response3.text[:200]}...")
            
            os.unlink(temp_file.name)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤: {e}")

def main():
    print("üöÄ –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ API Yandex SpeechKit\n")
    
    # –¢–µ—Å—Ç 1: –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    credentials_ok = test_api_credentials()
    
    # –¢–µ—Å—Ç 2: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
    connection_ok = test_api_connection()
    
    # –¢–µ—Å—Ç 3: –†–∞–∑–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    test_different_api_endpoints()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"   –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {'‚úÖ –û–ö' if credentials_ok else '‚ùå –û–®–ò–ë–ö–ê'}")
    print(f"   –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {'‚úÖ –û–ö' if connection_ok else '‚ùå –û–®–ò–ë–ö–ê'}")
    
    if credentials_ok and connection_ok:
        print("\nüéâ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å API")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")

if __name__ == "__main__":
    main()
