#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–º
"""

import os
import sys
import tempfile
from pydub import AudioSegment
from pydub.generators import Sine

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils_veretevo.yandex_speechkit import YandexSpeechKitTranscriber

def create_test_voice_file():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Ñ–∞–π–ª —Å –ø—Ä–æ—Å—Ç—ã–º —Ç–æ–Ω–æ–º"""
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Å–∏–Ω—É—Å–æ–∏–¥–∞–ª—å–Ω—ã–π —Ç–æ–Ω (–∏–º–∏—Ç–∞—Ü–∏—è –≥–æ–ª–æ—Å–∞)
        sample_rate = 48000
        duration = 3000  # 3 —Å–µ–∫—É–Ω–¥—ã
        
        # –°–æ–∑–¥–∞–µ–º —Ç–æ–Ω —Å —á–∞—Å—Ç–æ—Ç–æ–π —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –≥–æ–ª–æ—Å–∞
        sine_wave = Sine(220).to_audio_segment(duration=duration)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        with tempfile.NamedTemporaryFile(delete=False, suffix='.ogg') as temp_file:
            # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ OGG —Ñ–æ—Ä–º–∞—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            sine_wave.export(
                temp_file.name, 
                format='ogg', 
                codec='libopus',
                parameters=["-ac", "1", "-ar", "48000", "-b:a", "64k"]
            )
            return temp_file.name
    except Exception as e:
        print(f"[–û–®–ò–ë–ö–ê] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Ñ–∞–π–ª: {e}")
        return None

def test_real_transcription():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ñ–∞–π–ª–æ–º"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ñ–∞–π–ª–æ–º...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∞–π–±–µ—Ä
        transcriber = YandexSpeechKitTranscriber()
        print("‚úÖ –¢—Ä–∞–Ω—Å–∫—Ä–∞–π–±–µ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Ñ–∞–π–ª
        print("üéµ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Ñ–∞–π–ª...")
        test_voice_path = create_test_voice_file()
        if not test_voice_path:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Ñ–∞–π–ª")
            return False
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {test_voice_path}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é
        print("üé§ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é...")
        transcript = transcriber.process_audio_file(test_voice_path)
        
        if transcript:
            print(f"‚úÖ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç! –†–µ–∑—É–ª—å—Ç–∞—Ç: '{transcript}'")
            return True
        else:
            print("‚ùå –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False
    finally:
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        if 'test_voice_path' in locals() and os.path.exists(test_voice_path):
            try:
                os.unlink(test_voice_path)
                print("üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {e}")

def test_voice_transcriber_in_tasks():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç voice_transcriber –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ tasks.py"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ voice_transcriber –≤ tasks.py...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å tasks
        from handlers_veretevo.tasks import voice_transcriber
        
        if voice_transcriber is not None:
            print("‚úÖ voice_transcriber –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"   –¢–∏–ø: {type(voice_transcriber)}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∞–π–±–µ—Ä–∞
            test_transcriber = YandexSpeechKitTranscriber()
            print("‚úÖ –ù–æ–≤—ã–π —Ç—Ä–∞–Ω—Å–∫—Ä–∞–π–±–µ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            
            return True
        else:
            print("‚ùå voice_transcriber —Ä–∞–≤–µ–Ω None")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ voice_transcriber: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ä–µ–∞–ª—å–Ω–æ–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏...\n")
    
    # –¢–µ—Å—Ç 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è voice_transcriber
    test1_passed = test_voice_transcriber_in_tasks()
    
    # –¢–µ—Å—Ç 2: –†–∞–±–æ—Ç–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ñ–∞–π–ª–æ–º
    test2_passed = test_real_transcription()
    
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤:")
    print(f"   –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è voice_transcriber: {'‚úÖ –ü–†–û–ô–î–ï–ù' if test1_passed else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    print(f"   –†–∞–±–æ—Ç–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ñ–∞–π–ª–æ–º: {'‚úÖ –ü–†–û–ô–î–ï–ù' if test2_passed else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    
    if test1_passed and test2_passed:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–µ–π.")
        
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ API –∫–ª—é—á Yandex SpeechKit –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
    print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Folder ID —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –≤ Yandex Cloud")
    print("   4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –±–æ—Ç–∞") 