#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –æ—Ç–¥–µ–ª–æ–≤.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
"""
import sys
import json
import argparse
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from config_veretevo.constants import DEPARTMENTS_JSON_PATH
from services_veretevo.department_service import load_departments, save_departments, DEPARTMENTS

def add_member_to_department(department_key: str, user_id: int, user_name: str):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –æ—Ç–¥–µ–ª"""
    load_departments()
    
    if department_key not in DEPARTMENTS:
        print(f"‚ùå –û—Ç–¥–µ–ª '{department_key}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    department = DEPARTMENTS[department_key]
    user_id_str = str(user_id)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞
    department["members"][user_id_str] = user_name
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    save_departments()
    
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —É—á–∞—Å—Ç–Ω–∏–∫ {user_name} (ID: {user_id}) –≤ –æ—Ç–¥–µ–ª '{department_key}'")
    return True

def remove_member_from_department(department_key: str, user_id: int):
    """–£–¥–∞–ª—è–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –æ—Ç–¥–µ–ª–∞"""
    load_departments()
    
    if department_key not in DEPARTMENTS:
        print(f"‚ùå –û—Ç–¥–µ–ª '{department_key}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    department = DEPARTMENTS[department_key]
    user_id_str = str(user_id)
    
    if user_id_str not in department["members"]:
        print(f"‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–¥–µ–ª–µ '{department_key}'")
        return False
    
    user_name = department["members"][user_id_str]
    del department["members"][user_id_str]
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    save_departments()
    
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω —É—á–∞—Å—Ç–Ω–∏–∫ {user_name} (ID: {user_id}) –∏–∑ –æ—Ç–¥–µ–ª–∞ '{department_key}'")
    return True

def list_department_members(department_key: str):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ç–¥–µ–ª–∞"""
    load_departments()
    
    if department_key not in DEPARTMENTS:
        print(f"‚ùå –û—Ç–¥–µ–ª '{department_key}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    department = DEPARTMENTS[department_key]
    members = department.get("members", {})
    
    print(f"üìã –£—á–∞—Å—Ç–Ω–∏–∫–∏ –æ—Ç–¥–µ–ª–∞ '{department_key}' ({department['name']}):")
    if members:
        for user_id, name in members.items():
            print(f"  ‚Ä¢ {name} (ID: {user_id})")
    else:
        print("  (–Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)")

def add_from_file(department_key: str, file_path: str):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        if not isinstance(data, list):
            print("‚ùå –§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
            return False
        
        success_count = 0
        for member in data:
            if isinstance(member, dict) and 'id' in member and 'name' in member:
                if add_member_to_department(department_key, member['id'], member['name']):
                    success_count += 1
            else:
                print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞: {member}")
        
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {success_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –æ—Ç–¥–µ–ª '{department_key}'")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return False

def main():
    parser = argparse.ArgumentParser(description="–†—É—á–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –æ—Ç–¥–µ–ª–æ–≤")
    parser.add_argument("action", choices=["add", "remove", "list", "add-from-file"], 
                       help="–î–µ–π—Å—Ç–≤–∏–µ: add, remove, list, add-from-file")
    parser.add_argument("--department", "-d", required=True, help="–ö–ª—é—á –æ—Ç–¥–µ–ª–∞")
    parser.add_argument("--user-id", "-u", type=int, help="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    parser.add_argument("--name", "-n", help="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    parser.add_argument("--file", "-f", help="–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ (–¥–ª—è add-from-file)")
    
    args = parser.parse_args()
    
    if args.action == "list":
        list_department_members(args.department)
    elif args.action == "add":
        if not args.user_id or not args.name:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ --user-id –∏ --name –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞")
            return
        add_member_to_department(args.department, args.user_id, args.name)
    elif args.action == "remove":
        if not args.user_id:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ --user-id –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞")
            return
        remove_member_from_department(args.department, args.user_id)
    elif args.action == "add-from-file":
        if not args.file:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ --file –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞")
            return
        add_from_file(args.department, args.file)

if __name__ == "__main__":
    main() 