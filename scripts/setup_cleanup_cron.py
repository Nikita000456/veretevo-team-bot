#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ cron –∑–∞–¥–∞—á–∏ –æ—á–∏—Å—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.
–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—á–∏—Å—Ç–∫—É —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º –≤ 2:00 —É—Ç—Ä–∞.
"""

import os
import subprocess
import sys
from datetime import datetime

def install_cleanup_cron():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç cron –∑–∞–¥–∞—á—É –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∑–∞–¥–∞—á"""
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Å–∫—Ä–∏–ø—Ç—É –æ—á–∏—Å—Ç–∫–∏
    script_dir = os.path.dirname(os.path.abspath(__file__))
    project_dir = os.path.dirname(script_dir)
    cleanup_script = os.path.join(project_dir, "scripts", "cleanup_tasks.py")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not os.path.exists(cleanup_script):
        print(f"‚ùå –û—à–∏–±–∫–∞: —Å–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {cleanup_script}")
        return False
    
    # Cron –∑–∞–¥–∞—á–∞: –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 2:00 —É—Ç—Ä–∞
    cron_job = f"0 2 * * 0 cd {project_dir} && python3 scripts/cleanup_tasks.py >> logs/cleanup_cron.log 2>&1"
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ cron –∑–∞–¥–∞—á–∏
        result = subprocess.run(['crontab', '-l'], capture_output=True, text=True)
        current_crontab = result.stdout if result.returncode == 0 else ""
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –Ω–∞—à–∞ –∑–∞–¥–∞—á–∞
        if cron_job in current_crontab:
            print("‚úÖ Cron –∑–∞–¥–∞—á–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∑–∞–¥–∞—á —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            return True
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
        new_crontab = current_crontab + "\n" + cron_job + "\n"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π crontab
        process = subprocess.Popen(['crontab', '-'], stdin=subprocess.PIPE, text=True)
        process.communicate(input=new_crontab)
        
        if process.returncode == 0:
            print("‚úÖ Cron –∑–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            print(f"üìÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–¥–∞—á –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 2:00 —É—Ç—Ä–∞")
            print(f"üìù –õ–æ–≥–∏ –±—É–¥—É—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –≤: {project_dir}/logs/cleanup_cron.log")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ cron –∑–∞–¥–∞—á–∏")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def remove_cleanup_cron():
    """–£–¥–∞–ª—è–µ—Ç cron –∑–∞–¥–∞—á—É –æ—á–∏—Å—Ç–∫–∏ –∑–∞–¥–∞—á"""
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ cron –∑–∞–¥–∞—á–∏
        result = subprocess.run(['crontab', '-l'], capture_output=True, text=True)
        if result.returncode != 0:
            print("‚ÑπÔ∏è –ù–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö cron –∑–∞–¥–∞—á")
            return True
        
        current_crontab = result.stdout
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –Ω–∞—à–∏–º —Å–∫—Ä–∏–ø—Ç–æ–º –æ—á–∏—Å—Ç–∫–∏
        lines = current_crontab.split('\n')
        filtered_lines = []
        
        for line in lines:
            if 'cleanup_tasks.py' not in line and line.strip():
                filtered_lines.append(line)
        
        if len(filtered_lines) == len(lines):
            print("‚ÑπÔ∏è Cron –∑–∞–¥–∞—á–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∑–∞–¥–∞—á –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return True
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π crontab
        new_crontab = '\n'.join(filtered_lines) + '\n'
        process = subprocess.Popen(['crontab', '-'], stdin=subprocess.PIPE, text=True)
        process.communicate(input=new_crontab)
        
        if process.returncode == 0:
            print("‚úÖ Cron –∑–∞–¥–∞—á–∞ –æ—á–∏—Å—Ç–∫–∏ –∑–∞–¥–∞—á —É–¥–∞–ª–µ–Ω–∞")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ cron –∑–∞–¥–∞—á–∏")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def show_cron_status():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å cron –∑–∞–¥–∞—á"""
    
    try:
        result = subprocess.run(['crontab', '-l'], capture_output=True, text=True)
        if result.returncode == 0:
            print("üìã –¢–µ–∫—É—â–∏–µ cron –∑–∞–¥–∞—á–∏:")
            print(result.stdout)
        else:
            print("‚ÑπÔ∏è –ù–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö cron –∑–∞–¥–∞—á")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ cron –∑–∞–¥–∞—á: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python3 setup_cleanup_cron.py install   # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å cron –∑–∞–¥–∞—á—É")
        print("  python3 setup_cleanup_cron.py remove    # –£–¥–∞–ª–∏—Ç—å cron –∑–∞–¥–∞—á—É")
        print("  python3 setup_cleanup_cron.py status    # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å")
        return
    
    command = sys.argv[1].lower()
    
    if command == "install":
        if install_cleanup_cron():
            print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print("üí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python3 setup_cleanup_cron.py status")
        else:
            print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
            sys.exit(1)
    
    elif command == "remove":
        if remove_cleanup_cron():
            print("\n‚úÖ Cron –∑–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞")
        else:
            print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏")
            sys.exit(1)
    
    elif command == "status":
        show_cron_status()
    
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        sys.exit(1)

if __name__ == "__main__":
    main() 