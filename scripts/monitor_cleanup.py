#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–∞–±–æ—Ç—ã cron –æ—á–∏—Å—Ç–∫–∏ –∑–∞–¥–∞—á.
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—É—Å–∫–∏.
"""

import os
import sys
import subprocess
from datetime import datetime, timedelta

def check_cron_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å cron –∑–∞–¥–∞—á"""
    try:
        result = subprocess.run(['crontab', '-l'], capture_output=True, text=True)
        if result.returncode == 0 and 'cleanup_tasks.py' in result.stdout:
            print("‚úÖ Cron –∑–∞–¥–∞—á–∞ –æ—á–∏—Å—Ç–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            return True
        else:
            print("‚ùå Cron –∑–∞–¥–∞—á–∞ –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ cron: {e}")
        return False

def check_log_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤"""
    project_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    logs_dir = os.path.join(project_dir, "logs")
    
    print("\nüìã –°—Ç–∞—Ç—É—Å —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥ –æ—á–∏—Å—Ç–∫–∏
    cleanup_log = os.path.join(logs_dir, "cleanup_tasks.log")
    if os.path.exists(cleanup_log):
        size = os.path.getsize(cleanup_log)
        mtime = datetime.fromtimestamp(os.path.getmtime(cleanup_log))
        print(f"‚úÖ cleanup_tasks.log: {size} –±–∞–π—Ç, –∏–∑–º–µ–Ω–µ–Ω {mtime.strftime('%Y-%m-%d %H:%M:%S')}")
    else:
        print("‚ùå cleanup_tasks.log: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º cron –ª–æ–≥
    cron_log = os.path.join(logs_dir, "cleanup_cron.log")
    if os.path.exists(cron_log):
        size = os.path.getsize(cron_log)
        mtime = datetime.fromtimestamp(os.path.getmtime(cron_log))
        print(f"‚úÖ cleanup_cron.log: {size} –±–∞–π—Ç, –∏–∑–º–µ–Ω–µ–Ω {mtime.strftime('%Y-%m-%d %H:%M:%S')}")
    else:
        print("‚ùå cleanup_cron.log: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")

def show_recent_logs():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –ª–æ–≥–æ–≤"""
    project_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    logs_dir = os.path.join(project_dir, "logs")
    
    print("\nüìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –ª–æ–≥–æ–≤:")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ cron –ª–æ–≥–∞
    cron_log = os.path.join(logs_dir, "cleanup_cron.log")
    if os.path.exists(cron_log):
        print("\nüïê Cron –ª–æ–≥ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫):")
        try:
            with open(cron_log, 'r') as f:
                lines = f.readlines()
                for line in lines[-10:]:
                    print(f"  {line.strip()}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è cron –ª–æ–≥–∞: {e}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ª–æ–≥–∞
    cleanup_log = os.path.join(logs_dir, "cleanup_tasks.log")
    if os.path.exists(cleanup_log):
        print("\nüßπ –û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥ –æ—á–∏—Å—Ç–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫):")
        try:
            with open(cleanup_log, 'r') as f:
                lines = f.readlines()
                for line in lines[-10:]:
                    print(f"  {line.strip()}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ª–æ–≥–∞: {e}")

def test_cleanup():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—á–∏—Å—Ç–∫—É –∑–∞–¥–∞—á"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ –∑–∞–¥–∞—á...")
    
    try:
        result = subprocess.run([
            sys.executable, 
            os.path.join(os.path.dirname(os.path.abspath(__file__)), "cleanup_tasks.py")
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")
            if result.stdout:
                print("üì§ –í—ã–≤–æ–¥:")
                for line in result.stdout.split('\n'):
                    if line.strip():
                        print(f"  {line}")
        else:
            print("‚ùå –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –ø—Ä–æ—à–µ–ª")
            if result.stderr:
                print("üì§ –û—à–∏–±–∫–∏:")
                for line in result.stderr.split('\n'):
                    if line.strip():
                        print(f"  {line}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    
    print("üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—á–∏—Å—Ç–∫–∏ –∑–∞–¥–∞—á Veretevo Team Bot")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º cron —Å—Ç–∞—Ç—É—Å
    cron_ok = check_cron_status()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤
    check_log_files()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
    show_recent_logs()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—á–∏—Å—Ç–∫—É
    if len(sys.argv) > 1 and sys.argv[1] == "--test":
        test_cleanup()
    
    print("\n" + "=" * 50)
    if cron_ok:
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—á–∏—Å—Ç–∫–∏ –∑–∞–¥–∞—á —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("üìÖ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫: –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 2:00 —É—Ç—Ä–∞")
    else:
        print("‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å cron –∑–∞–¥–∞—á—É:")
        print("   python3 scripts/setup_cleanup_cron.py install")

if __name__ == "__main__":
    main() 